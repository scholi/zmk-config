/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        COMPOSE {
            bindings = <&kp F24>;
            key-positions = <3 4>;
        };

        a_grave {
            bindings = <&kp LS(SINGLE_QUOTE)>;
            key-positions = <13 25>;
        };

        e_aigu {
            bindings = <&kp LS(SEMICOLON)>;
            key-positions = <20 8>;
        };

        e_grave {
            bindings = <&kp LBRC>;
            key-positions = <20 32>;
        };

        hat {
            bindings = <&kp EQUAL>;
            key-positions = <20 22>;
        };

        e_hat {
            bindings = <&e_hat>;
            key-positions = <21 22 20>;
        };
    };

    macros {
        double_arrow: double_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N0) &kp LS(NUBS)>;
            label = "DOUBLE_ARROW";
        };

        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SLASH &kp LS(NUBS)>;
            label = "ARROW";
        };

        osch: osch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(O) &kp LS(S) &kp LS(C) &kp LS(H)>;
            label = "OSCH";
        };

        e_hat: e_hat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp E>;
            label = "E_HAT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  D  |  H  |  W  |  B  |   |  J  |  F   |  U  |  P  |  Â¨  | BKSP |
            // | CTRL |  A  |  S  |  R  |  T  |  G  |   |  Y  |  N   |  E  |  O  |  I  |  '   |
            // | SHFT |  Z  |  X  |  C  |  M  |  V  |   |  K  |  L   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q        &kp D           &kp H           &kp W         &kp B        &kp J    &kp F         &kp U            &kp P           &kp RIGHT_BRACKET  &none
&none  &mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_GUI R  &mt LSHIFT T  &kp G        &kp Z    &mt RSHIFT N  &mt RIGHT_GUI E  &mt LEFT_ALT O  &mt RCTRL I        &none
&none  &kp Y        &kp X           &kp C           &kp M         &kp V        &kp K    &kp L         &kp COMMA        &mt RALT DOT    &kp FSLH           &none
                                    &mo 1           &mo 3         &kp SPACE    &kp RET  &mo 2         &kp LEFT_SHIFT
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none      &none         &none         &none       &none           &kp PAGE_UP    &kp HOME        &kp UP_ARROW  &kp END    &kp INS    &none
&none  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LSHIFT  &kp UP_ARROW    &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp DEL    &none
&none  &none      &none         &none         &none       &none           &trans         &trans          &trans        &trans     &kp ENTER  &none
                                &trans        &trans      &kp SPACE       &kp TAB        &trans          &trans
            >;
        };

        sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL          &kp RA(NUMBER_2)  &kp RA(SQT)   &kp RA(NUHS)  &kp PRCNT    &kp CARET  &kp F7  &kp F8    &kp F9  &kp F10  &none
&none  &kp RA(NUMBER_3)  &kp NUHS          &kp LS(N8)    &kp LS(N9)    &kp MINUS    &kp MINUS  &kp F4  &kp F5    &kp F6  &kp F11  &none
&none  &kp RA(NUBS)      &kp LS(NUMBER_2)  &kp RA(LBKT)  &kp RA(RBKT)  &none        &kp UNDER  &kp F1  &kp F2    &kp F3  &kp F12  &none
                                           &kp NUBS      &kp LS(NUBS)  &kp ESC      &kp RET    &none   &kp RALT
            >;
        };

        num {
            bindings = <
&none  &none      &none         &none         &none       &none           &kp RA(N7)     &kp N7        &kp N8  &kp N9        &kp LS(N3)  &none
&none  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &kp LSHIFT  &kp UP_ARROW    &kp LS(N0)     &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp LS(N1)  &none
&none  &none      &none         &none         &none       &none           &kp LS(N6)     &kp N1        &kp N2  &kp N3        &kp LS(N5)  &none
                                &trans        &trans      &kp SPACE       &kp BACKSPACE  &mo 4         &kp N0
            >;
        };

        Fn {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4    &trans  &trans  &trans  &trans  &sys_reset  &trans
&trans  &trans        &kp K_PREV    &kp K_NEXT    &kp K_PLAY_PAUSE  &trans          &trans  &trans  &trans  &trans  &trans      &trans
&trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE    &trans            &kp K_MENU      &trans  &trans  &trans  &trans  &trans      &trans
                                    &trans        &trans            &trans          &trans  &trans  &trans
            >;
        };
    };
};
